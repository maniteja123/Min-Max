<!DOCTYPE html>
<html>

<table border="1" width="600" height="600">
  <tr>
    <td width="75" height="75"><p id="1">P</p></td>
    <td width="75"><p id="2">P</p></td>
    <td width="75"><p id="3">P</p></td>
    <td width="75"><p id="4">P</p></td>
    <td width="75"><p id="5">P</p></td>
    <td width="75"><p id="6">P</p></td>
    <td width="75"><p id="7">P</p></td>
    <td width="75"><p id="8">P</p></td>
  </tr>
  <tr>
    <td height="74"><p id="9"></p></td>
    <td ><p id="10"></p></td>
    <td ><p id="11"></p></td>
    <td ><p id="12"></p></td>
    <td ><p id="13"></p></td>
    <td ><p id="14"></p></td>
    <td ><p id="15"></p></td>
    <td ><p id="16"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="17"></p></td>
    <td ><p id="18"></p></td>
    <td ><p id="19"></p></td>
    <td ><p id="20"></p></td>
    <td ><p id="21"></p></td>
    <td ><p id="22"></p></td>
    <td ><p id="23"></p></td>
    <td ><p id="24"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="25"></p></td>
    <td ><p id="26"></p></td>
    <td ><p id="27"></p></td>
    <td ><p id="28"></p></td>
    <td ><p id="29"></p></td>
    <td ><p id="30"></p></td>
    <td ><p id="31"></p></td>
    <td ><p id="32"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="33"></p></td><!DOCTYPE html>
<html>

<table border="1" width="600" height="600">
  <tr>
    <td width="75" height="75"><p id="1">1</p></td>
    <td width="75"><p id="2">1</p></td>
    <td width="75"><p id="3">1</p></td>
    <td width="75"><p id="4">1</p></td>
    <td width="75"><p id="5">1</p></td>
    <td width="75"><p id="6">1</p></td>
    <td width="75"><p id="7">1</p></td>
    <td width="75"><p id="8">1</p></td>
  </tr>
  <tr>
    <td height="74"><p id="9"></p></td>
    <td ><p id="10"></p></td>
    <td ><p id="11"></p></td>
    <td ><p id="12"></p></td>
    <td ><p id="13"></p></td>
    <td ><p id="14"></p></td>
    <td ><p id="15"></p></td>
    <td ><p id="16"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="17"></p></td>
    <td ><p id="18"></p></td>
    <td ><p id="19"></p></td>
    <td ><p id="20"></p></td>
    <td ><p id="21"></p></td>
    <td ><p id="22"></p></td>
    <td ><p id="23"></p></td>
    <td ><p id="24"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="25"></p></td>
    <td ><p id="26"></p></td>
    <td ><p id="27"></p></td>
    <td ><p id="28"></p></td>
    <td ><p id="29"></p></td>
    <td ><p id="30"></p></td>
    <td ><p id="31"></p></td>
    <td ><p id="32"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="33"></p></td>
    <td ><p id="34"></p></td>
    <td ><p id="35"></p></td>
    <td ><p id="36"></p></td>
    <td ><p id="37"></p></td>
    <td ><p id="38"></p></td>
    <td ><p id="39"></p></td>
    <td ><p id="40"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="41"></p></td>
    <td ><p id="42"></p></td>
    <td ><p id="43"></p></td>
    <td ><p id="44"></p></td>
    <td ><p id="45"></p></td>
    <td ><p id="46"></p></td>
    <td ><p id="47"></p></td>
    <td ><p id="48"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="49"></p></td>
    <td ><p id="50"></p></td>
    <td ><p id="51"></p></td>
    <td ><p id="52"></p></td>
    <td ><p id="53"></p></td>
    <td ><p id="54"></p></td>
    <td ><p id="55"></p></td>
    <td ><p id="56"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="57">-1</p></td>
    <td ><p id="58">-1</p></td>
    <td ><p id="59">-1</p></td>
    <td ><p id="60">-1</p></td>
    <td ><p id="61">-1</p></td>
    <td ><p id="62">-1</p></td>
    <td ><p id="63">-1</p></td>
    <td ><p id="64">-1</p></td>
  </tr>
</table>
<p style="float:right;margin-top:-280px;margin-right:50px">
    X1:
    <input type="number" id="x1" style="float:center;margin-top:10px;"></input>
    &nbsp &nbsp &nbsp
    Y1:
    <input type="number" id="y1" style="float:center;margin-top:10px"></input>
    <br></br><br></br>
    X2:
    <input type="number" id="x2"></input>
    &nbsp &nbsp &nbsp
    Y2:
    <input type="number" id="y2"></input>
    <br></br>
    <br></br>
    <button id="button1" style="margin-left:20px;" >submit</button>
</p>
<script>
        var oldx, oldy , newy , newx;
        function max( a , b)
        {
            if(a>b)
            {
                return a;
            }
            else
            {
                return b ;
            }
            
        }
        function min( a ,  b)
        {
            if(a<b)
            {
                return a;
            }
            else
            {
                return b ;
            }
        }
        function hue( a)
        {
            var i , j ;
            var score = 0 ;
            var n = 8;
            
            
            for( i= 0 ; i < n ; i++)
            {
                for(j = 0  ; j < n ; j++)
                {
                    
                    if(i==0)
                    {
                        if(a[i][j] == -1)
                        {   return 99999999;
                        }
                    }
                    else if( i == (n-1))
                    {
                        
                        if(a[i][j] == 1)
                        {   

                            return -99999999;
                        }
                    }

                    if(a[i][j] == 1)
                    {                       
                        score = score-(n-i) ;
                        
                    }   

                    if(a[i][j] == -1)
                    {

                        score = Number(score) + Number(i) + 1;

                    }
                    
                }
            }
            
            
            return score;
        }

        function minimaximize( a,  alpha ,  beta , level)
        {
        
            var i , j ;
            if(level%2 == 1)
            {
                var huecost = 99999999;
                var flag = 1;
            }
            else
            {
                var huecost= -99999999; 
                var flag = -1; 
            }           
            var newhue;             
            //window.alert(flag);
            if(level == 0)
            {

                return hue(a);
            }
            for(i = 0 ;i < 8 ; i++)
            {
                for(j=  0 ; j < 8 ; j++)
                {
                    if( a[i][j] == flag)
                    {
                        
                        if( (Number(i)+Number(flag)) == -1 && (level%2 == 1))
                        {   return 99999999;}
                        if( (Number(i)+Number(flag)) == 8 && (level%2 == 0))
                        {   return -99999999;}

                        if(a[Number(i)+Number(flag)][j+1] == -1*flag && j+1 != 8)
                        {                   
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j+1] = flag;
                            if(level % 2 == 1)
                            {
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = min(newhue,huecost);
                                beta = min(beta,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j+1] = -1*flag;
                                if(beta <= alpha)
                                   break;
                            }
                            else
                            {
                                
                                newhue = minimaximize(a,alpha, beta, level-1);
                                huecost = max(newhue,huecost);
                                alpha = max(alpha,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j+1] = -1*flag;
                                if(beta <= alpha)
                                   break;
                            }
                        }
                        else if(a[Number(i)+Number(flag)][j-1] == -1*flag && j-1 != -1)
                        {
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j-1] = flag;
                            if(level % 2 == 1)
                            {
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = min(newhue,huecost);
                                beta = min(beta,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j-1] = -1*flag;
                                if(beta <= alpha)
                                   break;

                            }
                            else
                            {
                                
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = max(newhue,huecost);
                                alpha = max(alpha,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j-1] = -1*flag;
                                if(beta <= alpha)
                                   break;
                            } 
                        }
                        else if ( a[Number(i)+Number(flag)][j] == 0)
                        {

                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j] = flag;
                            if(level % 2 == 1)
                            {
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = min(newhue,huecost);
                                beta = min(beta,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j] = 0;  
                                if(beta <= alpha)
                                   break;
                            }
                            else
                            {
                                
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = max(newhue,huecost);
                                alpha = max(alpha,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j] = 0;  
                                if(beta <= alpha)
                                   break;
                            }                 
                        }
                    }
                }
            }       
            return huecost;
        }

        function nextmovetoplay( a,alpha, beta, level)
        {

            var i , j ;
            var huecost= 99999999;
            var newhue; 
            var flag = 1;
            for(i = 0 ;i < 8 ; i++)
            {
                for(j=  0 ; j < 8 ; j++)
                {
                    
                    if( a[i][j] == flag)
                    {
                        if( (Number(i)+Number(flag)) == -1 || (Number(i)+Number(flag)) == 8)
                        {   oldx = -1, oldy = -1 , newx = -1 , newy = -1;
                            return;
                        }
                        if(a[Number(i)+Number(flag)][j+1] == -1*flag && j+1 != 8)
                        { 
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j+1] = flag;                    
                            newhue = minimaximize(a,alpha, beta,level-1);                    
                            if(newhue < huecost)
                            {
                                oldx = i;
                                oldy = j;
                                newx = Number(i)+Number(flag);
                                newy = j+1;
                                huecost = newhue;
                            }                    

                            a[i][j] = flag;
                            a[Number(i)+Number(flag)][j+1] = -1*flag;
                            beta = min(beta,huecost);
                            if(beta <= alpha)
                               break;                           
                        }
                        else if(a[Number(i)+Number(flag)][j-1] == -1*flag && j-1 != -1)
                        {
                            
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j-1] = flag;
                            newhue = minimaximize(a,alpha, beta,level-1);
                            if(newhue < huecost)
                            {
                                oldx = i;
                                oldy = j;
                                newx = Number(i)+Number(flag);
                                newy = j-1;
                                huecost = newhue;
                            }                    
                            a[i][j] = flag;
                            a[Number(i)+Number(flag)][j-1] = -1*flag;
                            beta = min(beta,huecost);
                            if(beta <= alpha)
                               break;
                        }
                        else if ( a[Number(i)+Number(flag)][j] == 0)
                        {             

                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j] = flag;
                            newhue = minimaximize(a,alpha, beta,level-1);
                            if(newhue < huecost)
                            {
                                oldx = i;
                                oldy = j;
                                newx = Number(i)+Number(flag);
                                newy = j;
                                huecost = newhue;                       
                            }                    
                            a[i][j] = flag;
                            a[Number(i)+Number(flag)][j] = 0;                  
                            beta = min(beta,huecost);
                            if(beta <= alpha)
                               break;                  
                        }
                    }
                }
            }
            //window.alert("hi");

        }



    document.getElementById("button1").onclick = function() {myFunction()};
    function myFunction() {     
        
        var x1 , y1 , x2 ,y2;
        x1   = document.getElementById("x1").value;
        y1   = document.getElementById("y1").value;
        x2   = document.getElementById("x2").value;
        y2   = document.getElementById("y2").value;

        var num,num1;
        num = Number((8-x1)*8) + Number(y1);
        num1 = Number((8-x2)*8) + Number(y2);

        if(document.getElementById(String(num)).innerHTML == "")
        {
            window.alert("error");
        }
        else
        {
            document.getElementById(String(num)).innerHTML = "";
            document.getElementById(String(num1)).innerHTML = "-1";
        }
        var i , j; 
        items = [
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],                  
                ];      

        
        for(i= 0 ; i < 8 ; i++)
        {
            for(j= 0 ; j < 8 ; j++)
            {
                var a = (Number(i)*8)+Number(j)+1;
                
                if(document.getElementById(String(a)).innerHTML != "")
                {               
                    
                    items[i][j] = Number(document.getElementById(String(a)).innerHTML);
                }
            }
        }        
        var depth = 5 ;
        
        //window.alert(items[7][7]);
        nextmovetoplay(items,-99999999, 99999999,depth);
        var pos = (Number(oldx)*8)+Number(oldy)+1;
        var newpos = (Number(newx)*8)+Number(newy)+1;
        document.getElementById(String(pos)).innerHTML = "";
        document.getElementById(String(newpos)).innerHTML = "1";
        window.alert("your turn");

    }

</script>
</html>

    <td ><p id="34"></p></td>
    <td ><p id="35"></p></td>
    <td ><p id="36"></p></td>
    <td ><p id="37"></p></td>
    <td ><p id="38"></p></td>
    <td ><p id="39"></p></td>
    <td ><p id="40"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="41"></p></td>
    <td ><p id="42"></p></td>
    <td ><p id="43"></p></td>
    <td ><p id="44"></p></td>
    <td ><p id="45"></p></td>
    <td ><p id="46"></p></td>
    <td ><p id="47"></p></td>
    <td ><p id="48"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="49"></p></td>
    <td ><p id="50"></p></td>
    <td ><p id="51"></p></td>
    <td ><p id="52"></p></td>
    <td ><p id="53"></p></td>
    <td ><p id="54"></p></td>
    <td ><p id="55"></p></td>
    <td ><p id="56"></p></td>
  </tr>
  <tr>
    <td height="74"><p id="57">C</p></td>
    <td ><p id="58">C</p></td>
    <td ><p id="59">C</p></td>
    <td ><p id="60">C</p></td>
    <td ><p id="61">C</p></td>
    <td ><p id="62">C</p></td>
    <td ><p id="63">C</p></td>
    <td ><p id="64">C</p></td>
  </tr>
</table>
<p style="float:right;margin-top:-280px;margin-right:50px">
    X1:
    <input type="number" id="x1" style="float:center;margin-top:10px;"></input>
    &nbsp &nbsp &nbsp
    Y1:
    <input type="number" id="y1" style="float:center;margin-top:10px"></input>
    <br></br><br></br>
    X2:
    <input type="number" id="x2"></input>
    &nbsp &nbsp &nbsp
    Y2:
    <input type="number" id="y2"></input>
    <br></br>
    <br></br>
    <button id="button1" style="margin-left:20px;" >submit</button>
</p>
<script>
        var oldx, oldy , newy , newx;
        function max( a , b)
        {
            if(a>b)
            {
                return a;
            }
            else
            {
                return b ;
            }
            
        }
        function min( a ,  b)
        {
            if(a<b)
            {
                return a;
            }
            else
            {
                return b ;
            }
        }
        function hue( a)
        {
            var i , j ;
            var score = 0 ;
            var n = 8;
            
            
            for( i= 0 ; i < n ; i++)
            {
                for(j = 0  ; j < n ; j++)
                {
                    
                    if(i==0)
                    {
                        if(a[i][j] == -1)
                        {   return 99999999;
                        }
                    }
                    else if( i == (n-1))
                    {
                        
                        if(a[i][j] == 1)
                        {   

                            return -99999999;
                        }
                    }

                    if(a[i][j] == 1)
                    {                       
                        score = score-(n-i) ;
                        
                    }   

                    if(a[i][j] == -1)
                    {

                        score = Number(score) + Number(i) + 1;

                    }
                    
                }
            }
            
            
            return score;
        }

        function minimaximize( a,  alpha ,  beta , level)
        {
        
            var i , j ;
            if(level%2 == 1)
            {
                var huecost = 99999999;
                var flag = 1;
            }
            else
            {
                var huecost= -99999999; 
                var flag = -1; 
            }           
            var newhue;             
            //window.alert(flag);
            if(level == 0)
            {

                return hue(a);
            }
            for(i = 0 ;i < 8 ; i++)
            {
                for(j=  0 ; j < 8 ; j++)
                {
                    if( a[i][j] == flag)
                    {
                        
                        if( (Number(i)+Number(flag)) == -1 && (level%2 == 1))
                        {   return 99999999;}
                        if( (Number(i)+Number(flag)) == 8 && (level%2 == 0))
                        {   return -99999999;}

                        if(a[Number(i)+Number(flag)][j+1] == -1*flag && j+1 != 8)
                        {                   
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j+1] = flag;
                            if(level % 2 == 1)
                            {
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = min(newhue,huecost);
                                beta = min(beta,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j+1] = -1*flag;
                                if(beta <= alpha)
                                   break;
                            }
                            else
                            {
                                
                                newhue = minimaximize(a,alpha, beta, level-1);
                                huecost = max(newhue,huecost);
                                alpha = max(alpha,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j+1] = -1*flag;
                                if(beta <= alpha)
                                   break;
                            }
                        }
                        else if(a[Number(i)+Number(flag)][j-1] == -1*flag && j-1 != -1)
                        {
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j-1] = flag;
                            if(level % 2 == 1)
                            {
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = min(newhue,huecost);
                                beta = min(beta,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j-1] = -1*flag;
                                if(beta <= alpha)
                                   break;

                            }
                            else
                            {
                                
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = max(newhue,huecost);
                                alpha = max(alpha,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j-1] = -1*flag;
                                if(beta <= alpha)
                                   break;
                            } 
                        }
                        else if ( a[Number(i)+Number(flag)][j] == 0)
                        {

                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j] = flag;
                            if(level % 2 == 1)
                            {
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = min(newhue,huecost);
                                beta = min(beta,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j] = 0;  
                                if(beta <= alpha)
                                   break;
                            }
                            else
                            {
                                
                                newhue = minimaximize(a,alpha, beta,level-1);
                                huecost = max(newhue,huecost);
                                alpha = max(alpha,huecost);
                                a[i][j] = flag;
                                a[Number(i)+Number(flag)][j] = 0;  
                                if(beta <= alpha)
                                   break;
                            }                 
                        }
                    }
                }
            }       
            return huecost;
        }

        function nextmovetoplay( a,alpha, beta, level)
        {

            var i , j ;
            var huecost= 99999999;
            var newhue; 
            var flag = 1;
            for(i = 0 ;i < 8 ; i++)
            {
                for(j=  0 ; j < 8 ; j++)
                {
                    
                    if( a[i][j] == flag)
                    {
                        if( (Number(i)+Number(flag)) == -1 || (Number(i)+Number(flag)) == 8)
                        {   oldx = -1, oldy = -1 , newx = -1 , newy = -1;
                            return;
                        }
                        if(a[Number(i)+Number(flag)][j+1] == -1*flag && j+1 != 8)
                        { 
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j+1] = flag;                    
                            newhue = minimaximize(a,alpha, beta,level-1);                    
                            if(newhue < huecost)
                            {
                                oldx = i;
                                oldy = j;
                                newx = Number(i)+Number(flag);
                                newy = j+1;
                                huecost = newhue;
                            }                    

                            a[i][j] = flag;
                            a[Number(i)+Number(flag)][j+1] = -1*flag;
                            beta = min(beta,huecost);
                            if(beta <= alpha)
                               break;                           
                        }
                        else if(a[Number(i)+Number(flag)][j-1] == -1*flag && j-1 != -1)
                        {
                            
                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j-1] = flag;
                            newhue = minimaximize(a,alpha, beta,level-1);
                            if(newhue < huecost)
                            {
                                oldx = i;
                                oldy = j;
                                newx = Number(i)+Number(flag);
                                newy = j-1;
                                huecost = newhue;
                            }                    
                            a[i][j] = flag;
                            a[Number(i)+Number(flag)][j-1] = -1*flag;
                            beta = min(beta,huecost);
                            if(beta <= alpha)
                               break;
                        }
                        else if ( a[Number(i)+Number(flag)][j] == 0)
                        {             

                            a[i][j] = 0;
                            a[Number(i)+Number(flag)][j] = flag;
                            newhue = minimaximize(a,alpha, beta,level-1);
                            if(newhue < huecost)
                            {
                                oldx = i;
                                oldy = j;
                                newx = Number(i)+Number(flag);
                                newy = j;
                                huecost = newhue;                       
                            }                    
                            a[i][j] = flag;
                            a[Number(i)+Number(flag)][j] = 0;                  
                            beta = min(beta,huecost);
                            if(beta <= alpha)
                               break;                  
                        }
                    }
                }
            }
            //window.alert("hi");

        }



    document.getElementById("button1").onclick = function() {myFunction()};
    function myFunction() {     
        
        var x1 , y1 , x2 ,y2;
        x1   = document.getElementById("x1").value;
        y1   = document.getElementById("y1").value;
        x2   = document.getElementById("x2").value;
        y2   = document.getElementById("y2").value;

		var num,num1;
		num = Number((8-x1)*8) + Number(y1);
		num1 = Number((8-x2)*8) + Number(y2);

		if(document.getElementById(String(num)).innerHTML == "")
		{
            window.alert("error");
		}
		else
		{
            document.getElementById(String(num)).innerHTML = "";
            document.getElementById(String(num1)).innerHTML = "-1";
        }
        var i , j; 
        items = [
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],
                    [0,0,0,0,0,0,0,0],                  
                ];      

        
        for(i= 0 ; i < 8 ; i++)
        {
            for(j= 0 ; j < 8 ; j++)
            {
                var a = (Number(i)*8)+Number(j)+1;
                
                if(document.getElementById(String(a)).innerHTML != "")
                {               
                    
                    items[i][j] = Number(document.getElementById(String(a)).innerHTML);
                }
            }
        }        
        var depth = 5 ;
        
        //window.alert(items[7][7]);
        nextmovetoplay(items,-99999999, 99999999,depth);
        var pos = (Number(oldx)*8)+Number(oldy)+1;
        var newpos = (Number(newx)*8)+Number(newy)+1;
        document.getElementById(String(pos)).innerHTML = "";
        document.getElementById(String(newpos)).innerHTML = "P";
        window.alert("your turn");

	}

</script>
</html>
